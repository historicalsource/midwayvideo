;
; nile4.s - Source for initialization of the NILE IV system controller
;
; $Author: Mlynch $
;
; $Revision: 8 $
;
SA1_SYSTEM		equ	1
SEATTLE_SYSTEM		equ	2
FLAGSTAFF_SYSTEM	equ	4
VEGAS_SYSTEM		equ	8

	if	PHOENIX_SYS=VEGAS_SYSTEM
DRAM_BANK0_BASE_LO	equ          $00000000
DRAM_BANK0_BASE_HI	equ          $00000000
DRAM_BANK1_BASE_LO	equ          $00800000
DRAM_BANK1_BASE_HI	equ          $00000000

DEV_CS2_BASE_LO	equ             $01000000
DEV_CS2_BASE_HI	equ             $00000000
DEV_CS3_BASE_LO	equ             $01200000
DEV_CS3_BASE_HI	equ             $00000000
DEV_CS4_BASE_LO	equ             $01400000
DEV_CS4_BASE_HI	equ             $00000000

DEV_CS5_BASE_LO	equ             $01600000
DEV_CS5_BASE_HI	equ             $00000000
CPU_IO_BASE_LO	equ              DEV_CS5_BASE_LO
CPU_IO_BASE_HI	equ              DEV_CS5_BASE_HI

DEV_CS6_BASE_LO	equ             $01800000
DEV_CS6_BASE_HI	equ             $00000000
DEV_CS7_BASE_LO	equ             $01A00000
DEV_CS7_BASE_HI	equ             $00000000
DEV_CS8_BASE_LO	equ             $02000000
DEV_CS8_BASE_HI	equ             $00000000

PCIW0_BASE_LO	equ               $04000000
PCIW0_BASE_HI	equ               $00000000
PCIW1_BASE_LO	equ               $08000000
PCIW1_BASE_HI	equ               $00000000

N4_BASE_ADDR	equ	$BFA00000

PCI_INIT_BUG	equ	1


;
; Nile4 Physical Device Address Registers
;   [4.1] - Register Offsets
; 
N4_PDAR_SDRAM0_LO	equ	$0000
N4_PDAR_SDRAM0_HI	equ	$0004
N4_PDAR_SDRAM1_LO	equ	$0008
N4_PDAR_SDRAM1_HI	equ	$000C
N4_PDAR_DCS2_LO	equ	$0010
N4_PDAR_DCS2_HI	equ	$0014
N4_PDAR_DCS3_LO	equ	$0018
N4_PDAR_DCS3_HI	equ	$001C
N4_PDAR_DCS4_LO	equ	$0020
N4_PDAR_DCS4_HI	equ	$0024
N4_PDAR_DCS5_LO	equ	$0028
N4_PDAR_DCS5_HI	equ	$002C
N4_PDAR_DCS6_LO	equ	$0030
N4_PDAR_DCS6_HI	equ	$0034
N4_PDAR_DCS7_LO	equ	$0038
N4_PDAR_DCS7_HI	equ	$003C
N4_PDAR_DCS8_LO	equ	$0040
N4_PDAR_DCS8_HI	equ	$0044
N4_PDAR_PCIW0_LO	equ	$0060
N4_PDAR_PCIW0_HI	equ	$0064
N4_PDAR_PCIW1_LO	equ	$0068
N4_PDAR_PCIW1_HI	equ	$006C
N4_PDAR_INTCS_LO	equ	$0070
N4_PDAR_INTCS_HI	equ	$0074
N4_PDAR_BOOTCS_LO	equ	$0078
N4_PDAR_BOOTCS_HI	equ	$007C


;
; Nile4 Physical Device Address Registers
;   [4.1.1] - Physical Device Address Registers
;
PDAR_MEM_SZ_MASK		equ	$0000000F
PDAR_MEM_SZ_OFF		equ	$00000000
PDAR_MEM_SZ_4G			equ	$00000004
PDAR_MEM_SZ_2G			equ	$00000005
PDAR_MEM_SZ_1G			equ	$00000006
PDAR_MEM_SZ_512M		equ	$00000007
PDAR_MEM_SZ_256M		equ	$00000008
PDAR_MEM_SZ_128M		equ	$00000009
PDAR_MEM_SZ_64M		equ	$0000000A
PDAR_MEM_SZ_32M		equ	$0000000B
PDAR_MEM_SZ_16M		equ	$0000000C
PDAR_MEM_SZ_8M			equ	$0000000D
PDAR_MEM_SZ_4M			equ	$0000000E
PDAR_MEM_SZ_2M			equ	$0000000F
PDAR_MEM_BUS_SEL		equ	$00000010
PDAR_LOC_BUS_SEL		equ	$00000000
PDAR_VIS_PCI			equ	$00000020
PDAR_NVIS_PCI			equ	$00000000
PDAR_DEV_WIDTH_MASK	equ	$000000C0
PDAR_DEV_WIDTH_8		equ	$00000000
PDAR_DEV_WIDTH_16		equ	$00000040
PDAR_DEV_WIDTH_32		equ	$00000080
PDAR_DEV_WIDTH_64		equ	$000000C0
PDAR_ADDR_MASK_LO		equ	$FFE00000
PDAR_ADDR_MASK_HI		equ	$0000000F


;
; Nile4 CPU Interface Control Registers
;   [4.2] - Register Offsets
;
N4_CICR_CPUSTAT_LO	equ	$0080
N4_CICR_CPUSTAT_HI	equ	$0084
N4_CICR_INTCTRL_LO	equ	$0088
N4_CICR_INTCTRL_HI	equ	$008C
N4_CICR_INTSTAT0_LO	equ	$0090
N4_CICR_INTSTAT0_HI	equ	$0094
N4_CICR_INTSTAT1_LO	equ	$0098
N4_CICR_INTSTAT1_HI	equ	$009C
N4_CICR_INTCLR_LO		equ	$00A0
N4_CICR_INTCLR_HI		equ	$00A4
N4_CICR_INTPPESL_LO	equ	$00A8
N4_CICR_INTPPESL_HI	equ	$00AC

;
; Nile4 CPU Interface Control Registers
;   [4.2.1] - CPU Status Register
;
CSR_COLD_RESET		equ	$00000001
CSR_WARM_RESET		equ	$00000002
CSR_DISN4PC			equ	$00000004
CSR_DISCPUPC		equ	$00000008
CSR_TMODE_MASK		equ	$00000030
CSR_TMODE_SNBPZ	equ	$00000000
CSR_TMODE_SNGPZ	equ	$00000010
CSR_TMODE_MNBPZ	equ	$00000020
CSR_TMODE_MNGPZ	equ	$00000030
CSR_NILE_NUM_MASK	equ	$00000300
CSR_MAINNILE		equ	$00000400


;
; Nile4 CPU Interface Control Registers
;   [4.2.2] - Interrupt Control Register
;

;
; The interrupt assignment values below get
; shifted by the ICR_XXXX_PRI_SH value
;
N4_TO_CPU_0		equ	0
N4_TO_CPU_1		equ	1
N4_TO_CPU_2		equ	2
N4_TO_CPU_3		equ	3
N4_TO_CPU_4		equ	4
N4_TO_CPU_5		equ	5
N4_TO_CPU_NMI	equ	6

; Interrupt source masks, shift values, and enable bits ;
; Lo-order 32 bits ;
ICR_CPCE_PRI_MASK	equ	$00000007
ICR_CPCE_PRI_S	equ	0
ICR_CPCE_EN			equ	$00000008

ICR_CNTD_PRI_MASK	equ	$00000070
ICR_CNTD_PRI_S	equ	4
ICR_CNTD_EN			equ	$00000080

ICR_MCE_PRI_MASK	equ	$00000700
ICR_MCE_PRI_S		equ	8
ICR_MCE_EN			equ	$00000800

ICR_DMA_PRI_MASK	equ	$00007000
ICR_DMA_PRI_S		equ	12
ICR_DMA_EN			equ	$00008000

ICR_UART_PRI_MASK	equ	$00070000
ICR_UART_PRI_S	equ	16
ICR_UART_EN			equ	$00080000

ICR_WDOG_PRI_MASK	equ	$00700000
ICR_WDOG_PRI_S	equ	20
ICR_WDOG_EN			equ	$00800000

ICR_GPT_PRI_MASK	equ	$07000000
ICR_GPT_PRI_S		equ	24
ICR_GPT_EN			equ	$08000000

ICR_LBRT_PRI_MASK	equ	$70000000
ICR_LBRT_PRI_S	equ	28
ICR_LBRT_EN			equ	$80000000

; Hi-order 32 bits ;
ICR_INTA_PRI_MASK	equ	$00000007
ICR_INTA_PRI_S	equ	0
ICR_INTA_EN			equ	$00000008

ICR_INTB_PRI_MASK	equ	$00000070
ICR_INTB_PRI_S	equ	4
ICR_INTB_EN			equ	$00000080

ICR_INTC_PRI_MASK	equ	$00000700
ICR_INTC_PRI_S	equ	8
ICR_INTC_EN			equ	$00000800

ICR_INTD_PRI_MASK	equ	$00007000
ICR_INTD_PRI_S	equ	12
ICR_INTD_EN			equ	$00008000

ICR_INTE_PRI_MASK	equ	$00070000
ICR_INTE_PRI_S	equ	16
ICR_INTE_EN			equ	$00080000

ICR_PCIS_PRI_MASK	equ	$07000000
ICR_PCIS_PRI_S	equ	24
ICR_PCIS_EN			equ	$08000000

ICR_PCIE_PRI_MASK	equ	$70000000
ICR_PCIE_PRI_S	equ	28
ICR_PCIE_EN			equ	$80000000


;
; Nile4 CPU Interface Control Registers
;   [4.2.3] - Interrupt Status Register 0
;

;
; The following interrupt source request bits,
; which are used by Interrupt Status Registers
; 0 and 1, get shifted by the INSTAT_XXX_S value
;
N4_CPCE	equ	$0001
N4_CNTD	equ	$0002
N4_MCE	equ	$0004
N4_DMA	equ	$0008
N4_UART	equ	$0010
N4_WDOG	equ	$0020
N4_GPT	equ	$0040
N4_LBRT	equ	$0080
N4_INTA	equ	$0100
N4_INTB	equ	$0200
N4_INTC	equ	$0400
N4_INTD	equ	$0800
N4_INTE	equ	$1000
N4_INTF	equ	$2000
N4_PCIS	equ	$4000
N4_PCIE	equ	$8000

; Lo-order 32 bits ;
ISR_IL0_MASK	equ	$0000FFFF
ISR_IL0_S		equ	0

ISR_IL1_MASK	equ	$FFFF0000
ISR_IL1_S		equ	16

; Hi-order 32 bits ;
ISR_IL2_MASK	equ	$0000FFFF
ISR_IL2_S		equ	0

ISR_IL3_MASK	equ	$FFFF0000
ISR_IL3_S		equ	16

;
; Nile4 CPU Interface Control Registers
;   [4.2.4] - Interrupt Status Register 1
;
; Lo-order 32 bits ;
ISR_IL4_MASK	equ	$0000FFFF
ISR_IL4_S		equ	0

ISR_IL5	equ	$FFFF0000
ISR_IL5_S		equ	16

; hi-order 32 bits ;
ISR_NMI	equ	$0000FFFF
ISR_NMI_S		equ	0

ISR_IL0OE	equ	$00010000
ISR_IL1OE	equ	$00020000
ISR_IL2OE	equ	$00040000
ISR_IL3OE	equ	$00080000
ISR_IL4OE	equ	$00100000
ISR_IL5OE	equ	$00200000
ISR_ILNMI	equ	$00400000


;
; Nile4 CPU Interface Control Registers
;   [4.2.5] - Interrupt Clear Register
;

;
; Use the interrupt source bit values defined above
; in section [4.2.3] when writing to this register.
;

;
; Nile4 CPU Interface Control Registers
;   [4.2.6] - Interrupt Input Pins Control
;
IIPC_POS	equ	1
IIPC_NEG	equ	0

IIPC_INTA_POL_S	equ	0
IIPC_INTA_EDGE_S	equ	1
IIPC_INTB_POL_S	equ	2
IIPC_INTB_EDGE_S	equ	3
IIPC_INTC_POL_S	equ	4
IIPC_INTC_EDGE_S	equ	5
IIPC_INTD_POL_S	equ	6
IIPC_INTD_EDGE_S	equ	7
IIPC_INTE_POL_S	equ	8
IIPC_INTE_EDGE_S	equ	9


;
; Nile4 Main Memory Control Registers
;   [4.3] - Register Offsets
;
N4_MMCR_MEMCTRL_LO	equ	$00C0
N4_MMCR_MEMCTRL_HI	equ	$00C4
N4_MMCR_ACSTIME_LO	equ	$00C8
N4_MMCR_ACSTIME_HI	equ	$00CC
N4_MMCR_CHKERR_LO		equ	$00D0
N4_MMCR_CHKERR_HI		equ	$00D4


;
; Nile4 Main Memory Control Registers
;   [4.3.1] - Miscellaneous Main Memory Control Register
;
MEMCTRL_RAM_TYPE_MASK	equ	$00000003
RAM_TYPE_16M_2BANK		equ	0
RAM_TYPE_64M_2BANK		equ	1
RAM_TYPE_64M_4BANK		equ	2
RAM_TYPE_256M_4BANK		equ	3
MEMCTRL_CHKMODE			equ	$00000004
MEMCTRL_CHKDIS				equ	$00000008
MEMCTRL_ENABLE				equ	$00000010
MEMCTRL_ILEAVD				equ	$00000040
MEMCTRL_HOLDLD				equ	$00000080


;
; Nile4 Main Memory Control Registers
;   [4.3.2] - Main Memory Access Timing Register
;
ACSTIME_ACCT_MASK	equ	$0000001F
ACSTIME_DISMRDY	equ	$00000100


;
; Nile4 Main Memory Control Registers
;   [4.3.3] - Main Memory Check Error Status Register
;
; Lo-order 32 bits ;
CHKERR_CEADDR_MASK_LO	equ	$FFFFFFFFF
CHKERR_CEADDR_MASK_HI	equ	$00000000F

; NOTE: See page 26-27 for description of check error syndrome codes ;
CHKERR_CESYN_MASK	equ	$00FF0000
CHKERR_CESYN_S	equ	16

; Hi-order 32 bits ;
CHKERR_PCHKERR	equ	$01000000
CHKERR_ECHKERR	equ	$02000000
CHKERR_MCHKERR	equ	$04000000


;
; Nile4 PCI Control Registers
;   [4.4] - Register Offsets
;
N4_PCI_CTRL_LO		equ	$00E0
N4_PCI_CTRL_HI		equ	$00E4
N4_PCI_ARB_LO		equ	$00E8
N4_PCI_ARB_HI		equ	$00EC
N4_PCI_INIT0_LO	equ	$00F0
N4_PCI_INIT0_HI	equ	$00F4
N4_PCI_INIT1_LO	equ	$00F8
N4_PCI_INIT1_HI	equ	$00FC
; The following offsets are not a mistake ! ;
N4_PCI_ERR_LO		equ	$00B8
N4_PCI_ERR_HI		equ	$00BC

;
; Nile4 PCI Control Registers
;   [4.4.1] - PCI Control Register
;
; Lo-order 32 bits ;
PCICR_PCISYNC				equ	$00000001
PCICR_CLKSEL_ONETHIRD	equ	$00000000
PCICR_CLKSEL_TWOTHIRD	equ	$00000001
PCICR_CLKSEL_ONEHALF		equ	$00000002
PCICR_CLKSEL_EQUAL		equ	$00000003
PCICR_CLKSEL_PCLKIN		equ	$00000004
PCICR_CLKSEL_MASK			equ	$0000000E
PCICR_CLKSEL_S			equ	1
PCICR_CPUHOG_MASK			equ	$000000F0
PCICR_CPUHOG_S			equ	4
PCICR_DMAHOG_MASK			equ	$00000F00
PCICR_DMAHOG_S			equ	8
PCICR_FAPERR				equ	$00002000
PCICR_FDPERR				equ	$00004000
PCICR_FIFOSTALL			equ	$00008000
PCICR_RETRYLIM_MASK		equ	$00FF0000
PCICR_RETRYLIM_S			equ	16
PCICR_DISCTIM_MASK		equ	$FF000000
PCICR_DISCTIM_S			equ	24

; Hi-order 32 bits ;
PCICR_TACH_EN			equ	$00000001
PCICR_MACH_EN			equ	$00000002
PCICR_RTYCH				equ	$00000004
PCICR_PERCH				equ	$00000008
PCICR_DTIMCH			equ	$00000010
PCICR_ERRTYPE_MASK	equ	$000000E0
PCICR_ERRTYPE_S		equ	5
PCICR_ET_NONE			equ	0
PCICR_ET_TAR_ABORT	equ	1
PCICR_ET_MAS_ABORT	equ	2
PCICR_ET_RTY_EXC		equ	3
PCICR_ET_RD_PERR		equ	4
PCICR_ET_WR_PERR		equ	5
PCICR_ET_DTIM_EXP		equ	6
PCICR_TASE				equ	$00000100
PCICR_MASE				equ	$00000200
PCICR_RTYSE				equ	$00000400
PCICR_PERSE				equ	$00000800
PCICR_DTIMSE			equ	$00001000
PCICR_AERSE				equ	$00002000
PCICR_INTISE			equ	$00004000
PCICR_TAIN				equ	$00010000
PCICR_MAIN				equ	$00020000
PCICR_RTYIN				equ	$00040000
PCICR_PERIN				equ	$00080000
PCICR_DTIMIN			equ	$00100000
PCICR_AERIN				equ	$00200000
PCICR_INTAEN			equ	$01000000
PCICR_LATDIS			equ	$08000000
PCICR_PLL_SYNC			equ	$10000000
PCICR_PLL_STBY			equ	$20000000
PCICR_WARM_RESET		equ	$40000000
PCICR_COLD_RESET		equ	$80000000

;
; Nile4 PCI Control Registers
;   [4.4.2] - PCI Arbiter Control Register
;
PCIACR_REQ0		equ	0
PCIACR_REQ1		equ	1
PCIACR_REQ2		equ	2
PCIACR_REQ3		equ	3
PCIACR_REQ4		equ	4
PCIACR_REQNILE	equ	5

; Hi-order 32 bits ;
PCIACR_LEVEL0_MASK	equ	$0000003F
PCIACR_LEVEL0_S		equ	0

PCIACR_LEVEL1_MASK	equ	$00003F00
PCIACR_LEVEL1_S		equ	8

PCIACR_LEVEL2_MASK	equ	$003F0000
PCIACR_LEVEL2_S		equ	16

PCIACR_CONS0_MASK		equ	$0F000000
PCIACR_CONS0_S		equ	24

PCIACR_CONS0N_MASK	equ	$F0000000
PCIACR_CONS0N_S		equ	28

; Hi-order 32 bits ;
PCIACR_CONS1_MASK		equ	$0000000F
PCIACR_CONS1_S		equ	0

PCIACR_CONS2_MASK		equ	$000000F0
PCIACR_CONS2_S		equ	4

PCIACR_PARK0_MASK		equ	$00000F00
PCIACR_PARK0_S		equ	8

PCIACR_PARK1_MASK		equ	$0000F000
PCIACR_PARK1_S		equ	12

PCIACR_PARK2_MASK		equ	$000F0000
PCIACR_PARK2_S		equ	16

PCIACR_DEFGNT_0		equ	$00000000
PCIACR_DEFGNT_1		equ	$00100000
PCIACR_DEFGNT_2		equ	$00200000
PCIACR_DEFGNT_3		equ	$00300000
PCIACR_DEFGNT_4		equ	$00400000
PCIACR_DEFGNT_NILE	equ	$00500000

PCIACR_ARB_DISABLE	equ	$80000000


;
; Nile4 PCI Control Registers
;   [4.4.3] - PCI Initiator Control Register
;
; Lo-order 32 bits ;
PCIICR_TYPE_IA_SC		equ	$00000000
PCIICR_TYPE_IO			equ	$00000001
PCIICR_TYPE_RES1		equ	$00000002
PCIICR_TYPE_MEM		equ	$00000003
PCIICR_TYPE_RES2		equ	$00000004
PCIICR_TYPE_CONFIG	equ	$00000005
PCIICR_TYPE_MRM_DAC	equ	$00000006
PCIICR_TYPE_MRL_MWI	equ	$00000007
PCIICR_TYPE_S			equ	1

PCIICR_ACC32			equ	$00000010
PCIICR_LOCK				equ	$00000020
PCIICR_COMBO_WR		equ	$00000040
PCIICR_MERGE_WR		equ	$00000080
PCIICR_PREFETCH		equ	$00000100
PCIICR_CONFIG_TYPE	equ	$00000200

PCIICR_SINGLE_PFB_MASK	equ	$00007C00
PCIICR_SINGLE_PFB_S		equ	10
PCIICR_BLOCK_PFB_MASK	equ	$001F8000
PCIICR_BLOCK_PFB_S		equ	15

PCIICR_ADDR_MASK_LO	equ	$FFE00000
PCIICR_ADDR_S_LO		equ	21
PCIICR_ADDR_MASK_HI	equ	$FFFFFFFF


;
; Nile4 PCI Control Registers
;   [4.4.4] - PCI Error Register
;
; Lo-order 32 bits ;
PCIER_ISCPU				equ	$00000001
PCIER_ADDR_MASK_LO	equ	$FFFFFFFC
PCIER_ADDR_S_LO		equ	2

; Hi-orider 32 bits ;
PCIER_ADDR_MASK_HI	equ	$FFFFFFFF


;
; Nile4 Local Bus Interface Control Registers
;   [4.5] - Register Offsets
;
N4_LBICR_CONFIG_LO	equ	$100
N4_LBICR_CONFIG_HI	equ	$104
N4_LBICR_LCST2_LO		equ	$110
N4_LBICR_LCST2_HI		equ	$114
N4_LBICR_LCST3_LO		equ	$118
N4_LBICR_LCST3_HI		equ	$11C
N4_LBICR_LCST4_LO		equ	$120
N4_LBICR_LCST4_HI		equ	$124
N4_LBICR_LCST5_LO		equ	$128
N4_LBICR_LCST5_HI		equ	$12C
N4_LBICR_LCST6_LO		equ	$130
N4_LBICR_LCST6_HI		equ	$134
N4_LBICR_LCST7_LO		equ	$138
N4_LBICR_LCST7_HI		equ	$13C
N4_LBICR_LCST8_LO		equ	$140
N4_LBICR_LCST8_HI		equ	$144
N4_LBICR_DCSMUXOE_LO	equ	$150
N4_LBICR_DCSMUXOE_HI	equ	$154
N4_LBICR_DCSIO_LO		equ	$158
N4_LBICR_DCSIO_HI		equ	$15C
N4_LBICR_BOOTCST_LO	equ	$178
N4_LBICR_BOOTCST_HI	equ	$17C


;
; Nile4 Local Bus Interface Control Registers
;   [4.5.1] - Local Bus Configuration Register
;
; Lo-order 32 bits ;
LBCR_ARBMODE	equ	$00000001
LBCR_ARBEN		equ	$00000002
LBCR_FLCLCLK	equ	$00000010

LBCR_DMAHOG_MASK	equ	$000F0000
LBCR_DMAHOG_S		equ	16

LBCR_PCIHOG_MASK	equ	$00F00000
LBCR_PCIHOG_S		equ	20

LBCR_CPUHOG_MASK	equ	$0F000000
LBCR_CPUHOG_S		equ	24


;
; Nile4 Local Bus Interface Control Registers
;   [4.5.2] - Local Bus Chip Select Timing Registers
;
; Lo-order 32 bits ;
LBCST_CSON_MASK	equ	$00000001
LBCST_CSON_S		equ	0

LBCST_CONSET_MASK	equ	$00000006
LBCST_CONSET_S	equ	1

LBCST_CONWID_MASK	equ	$000001F8
LBCST_CONWID_S	equ	3

LBCST_SUBSCWID_MASK	equ	$00007E00
LBCST_SUBSCWID_S		equ	9

LBCST_CSOFF_MASK	equ	$00018000
LBCST_CSOFF_S		equ	15

LBCST_COFHOLD_MASK	equ	$00060000
LBCST_COFHOLD_S		equ	17

LBCST_BUSIDLE_MASK	equ	$00380000
LBCST_BUSIDLE_S		equ	19

LBCST_RDYMODE_MASK	equ	$00400000
LBCST_RDYMODE_S		equ	22

LBCST_RDYSYN_MASK	equ	$00800000
LBCST_RDYSYN_S	equ	23

LBCST_CONOFF_MASK	equ	$03000000
LBCST_CONOFF_S	equ	24

LBCST_CS_POL_MASK	equ	$04000000
LBCST_CS_POL_S	equ	26

LBCST_CON_POL_MASK	equ	$08000000
LBCST_CON_POL_S		equ	27


;
; Nile4 Local Bus Interface Control Registers
;   [4.5.3] - Device Chip Source Muxing and Output Enables
;
OE	equ	1

MUX_IS_MEM			equ	0
MUX_IS_DCSLOUT	equ	1
MUX_IS_SPEC_IN	equ	2
MUX_IS_SPEC_OUT	equ	3

; Lo-order 32 bits ;
OE2_S	equ	0
MUX2_S	equ	1

OE3_S	equ	4
MUX3_S	equ	5

OE4_S	equ	8
MUX4_S	equ	9

OE5_S	equ	12
MUX5_S	equ	13

OE6_S	equ	16
MUX6_S	equ	17

OE7_S	equ	20
MUX7_S	equ	21

OE8_S	equ	24
MUX8_S	equ	25


;
; Nile4 Local Bus Interface Control Registers
;   [4.5.4] - Device CS Pins as I/O Bits
;
; Lo-order 32 bits ;
DCSIO_DCS2IN	equ	$00000001
DCSIO_DCS3IN	equ	$00000002
DCSIO_DCS4IN	equ	$00000003
DCSIO_DCS5IN	equ	$00000004
DCSIO_DCS6IN	equ	$00000010
DCSIO_DCS7IN	equ	$00000020
DCSIO_DCS8IN	equ	$00000040

DCSIO_DCS2OUT	equ	$00000100
DCSIO_DCS3OUT	equ	$00000200
DCSIO_DCS4OUT	equ	$00000400
DCSIO_DCS5OUT	equ	$00000800
DCSIO_DCS6OUT	equ	$00001000
DCSIO_DCS7OUT	equ	$00002000
DCSIO_DCS8OUT	equ	$00004000


;
; Nile4 DMA Controller Registers
;   [4.6] - Register Offsets
;
N4_DMACR_CTRL0_LO	equ	$0180
N4_DMACR_CTRL0_HI	equ	$0184
N4_DMACR_SA0_LO	equ	$0188
N4_DMACR_SA0_HI	equ	$018C
N4_DMACR_DA0_LO	equ	$0190
N4_DMACR_DA0_HI	equ	$0194
N4_DMACR_CTRL1_LO	equ	$0198
N4_DMACR_CTRL1_HI	equ	$019C
N4_DMACR_SA1_LO	equ	$01A0
N4_DMACR_SA1_HI	equ	$01A4
N4_DMACR_DA1_LO	equ	$01A8
N4_DMACR_DA1_HI	equ	$01AC


;
; Nile4 DMA Controller Registers
;   [4.6.1] - DMA Control Registers
;
; Lo-order 32 bits ;
DMACR_BLKSZ_MASK	equ	$000FFFFF

DMACR_HHS_SRC	equ	0
DMACR_HHS_DST	equ	1
DMACR_HHS_S	equ	22

DMACR_HHS_EN		equ	$00800000
DMACR_DMA_RESET	equ	$01000000
DMACR_SRC_INC		equ	$02000000
DMACR_DST_INC		equ	$04000000
DMACR_STOP			equ	$08000000
DMACR_GO				equ	$10000000
DMACR_INT_VALID	equ	$20000000
DMACR_INT_EN		equ	$40000000
DMACR_BUSY			equ	$80000000

; Hi-order 32 bits ;
DMACR_MEM_RD_ERR		equ	$00000001
DMACR_PCI_RD_ERR		equ	$00000002
DMACR_BAD_ADDR_ERR	equ	$00000004
DMACR_DMA_EOT			equ	$00000008


;
; Nile4 DMA Controller Registers
;   [4.6.2] - DMA Source      Address Register
;   [4.6.3] - DMA Destination Address Register
;
DMAAR_ADDR_MASK_LO	equ	$FFFFFFFF
DMAAR_ADDR_MASK_HI	equ	$0000000F


;
; Nile4 Timer Registers
;   [4.7] - Register Offsets
;
N4_TR_T0CTRL_LO	equ	$01C0
N4_TR_T0CTRL_HI	equ	$01C4
N4_TR_T0CNT_LO		equ	$01C8
N4_TR_T0CNT_HI		equ	$01CC
N4_TR_T1CTRL_LO	equ	$01D0
N4_TR_T1CTRL_HI	equ	$01D4
N4_TR_T1CNT_LO		equ	$01D8
N4_TR_T1CNT_HI		equ	$01DC
N4_TR_T2CTRL_LO	equ	$01E0
N4_TR_T2CTRL_HI	equ	$01E4
N4_TR_T2CNT_LO		equ	$01E8
N4_TR_T2CNT_HI		equ	$01EC
N4_TR_T3CTRL_LO	equ	$01F0
N4_TR_T3CTRL_HI	equ	$01F4
N4_TR_T3CNT_LO		equ	$01F8
N4_TR_T3CNT_HI		equ	$01FC


;
; Nile4 Timer Registers
;   [4.7.1] - (Timer 0) DMA Refresh Control Register
;   [4.7.2] - (Timer 0) DMA Refresh Counter Register
;   [4.7.3] - (Timer 1) Bus Read Timeout Control Register
;   [4.7.4] - (Timer 1) Bus Read Timeout Counter Register
;   [4.7.5] - (Timer 2) General Purpose Timer Control Register
;   [4.7.6] - (Timer 2) General Purpose Timer Counter Register
;   [4.7.7] - (Timer 3) Watch Dog Timer Control Register
;   [4.7.8] - (Timer 3) Watch Dog Timer Counter Register
;
; Lo-order 32 bits ;
TCR_T0_CNT_MASK	equ	$0000FFFF
TCR_T1_CNT_MASK	equ	$00FFFFFF
TCR_T2_CNT_MASK	equ	$FFFFFFFF
TCR_T3_CNT_MASK	equ	$FFFFFFFF

; Hi-order 32 bits ;
TCR_EN				equ	$00000001
TCR_PRE_EN			equ	$00000002
TCR_PRE_SRC_MASK	equ	$0000000C
TCR_PRE_SRC_S		equ	2
TCR_PRE_SRC_T0		equ	0
TCR_PRE_SRC_T1		equ	1
TCR_PRE_SRC_T2		equ	2
TCR_PRE_SRC_T3		equ	3


;
; Nile4 PCI Configuration Space Registers
;   [4.8] - Register Offsets
;
N4_PCICSR_VID		equ	$200
N4_PCICSR_DID		equ	$202
N4_PCICSR_PCICMD	equ	$204
N4_PCICSR_PCISTS	equ	$206
N4_PCICSR_REVID	equ	$208
N4_PCICSR_CLASS	equ	$209
N4_PCICSR_CLSIZE	equ	$20C
N4_PCICSR_MLTIME	equ	$20D
N4_PCICSR_HTYPE	equ	$20E

N4_PCICSR_BARC	equ	$210
N4_PCICSR_BAR0	equ	$218
N4_PCICSR_BAR1	equ	$220

N4_PCICSR_SSVID	equ	$22C
N4_PCICSR_SSID		equ	$22E


N4_PCICSR_INTLIN	equ	$23C
N4_PCICSR_INTPIN	equ	$23D


N4_PCICSR_BAR2	equ	$240
N4_PCICSR_BAR3	equ	$248
N4_PCICSR_BAR4	equ	$250
N4_PCICSR_BAR5	equ	$258
N4_PCICSR_BAR6	equ	$260
N4_PCICSR_BAR7	equ	$268
N4_PCICSR_BAR8	equ	$270
N4_PCICSR_BARB	equ	$278


;
; Nile4 UART Registers
;   [4.9] - UART Registers
;
N4_UART_BASE	equ	$0300

;
; UART register offset definitions
;   registers are on 64-bit boundaries in the Nile4
;
N4_UART_THR	equ	$300
N4_UART_RBR	equ	$300
N4_UART_DLL	equ	$300

N4_UART_IER	equ	$308
N4_UART_DLM	equ	$308

N4_UART_IIR	equ	$310
N4_UART_FCR	equ	$310

N4_UART_LCR	equ	$318
N4_UART_MCR	equ	$320
N4_UART_LSR	equ	$328
N4_UART_MSR	equ	$330
N4_UART_SCR	equ	$338






	section	.data

;  Format of the table is:
;     Nile4 register address
;     Nile4 register contents (lo 32-bits)
;     Nile4 register contents (hi 32-bits)

nile4InitTable:
	; Boot PROM Chip Select
	dw	(N4_BASE_ADDR+N4_LBICR_BOOTCST_LO)
	dw	((1<<LBCST_BUSIDLE_S)|(0<<LBCST_COFHOLD_S)|(1<<LBCST_CSOFF_S)|(4<<LBCST_SUBSCWID_S)|(5<<LBCST_CONWID_S)|(1<<LBCST_CONSET_S)|(1<<LBCST_CSON_S))
	dw	0              

	; SDRAM Bank 0 PDAR (0000.0000 - 007F.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_SDRAM0_LO)
	dw	PDAR_MEM_SZ_8M|PDAR_MEM_BUS_SEL|PDAR_VIS_PCI|PDAR_DEV_WIDTH_64|(DRAM_BANK0_BASE_LO&PDAR_ADDR_MASK_LO)
	dw	(DRAM_BANK0_BASE_LO&PDAR_ADDR_MASK_HI)


	; SDRAM Bank 1 PDAR (0080.0000 - 00FF.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_SDRAM1_LO)
	dw	(PDAR_MEM_SZ_8M|PDAR_MEM_BUS_SEL|PDAR_VIS_PCI|PDAR_DEV_WIDTH_64|(DRAM_BANK1_BASE_LO&PDAR_ADDR_MASK_LO))
	dw	(DRAM_BANK1_BASE_HI&PDAR_ADDR_MASK_HI)


	; DCS2 PDAR (0100.0000 - 011F.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_DCS2_LO)
	dw	(PDAR_MEM_SZ_2M|PDAR_LOC_BUS_SEL|PDAR_NVIS_PCI|PDAR_DEV_WIDTH_8|(DEV_CS2_BASE_LO&PDAR_ADDR_MASK_LO))
	dw	(DEV_CS2_BASE_HI&PDAR_ADDR_MASK_HI)


	; DCS3 PDAR (0120.0000 - 013F.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_DCS3_LO)
	dw	(PDAR_MEM_SZ_2M|PDAR_LOC_BUS_SEL|PDAR_NVIS_PCI|PDAR_DEV_WIDTH_8|(DEV_CS3_BASE_LO&PDAR_ADDR_MASK_LO))
	dw	(DEV_CS3_BASE_HI&PDAR_ADDR_MASK_HI)


	; DCS4 PDAR (0140.0000 - 015F.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_DCS4_LO)
	dw	(PDAR_MEM_SZ_2M|PDAR_LOC_BUS_SEL|PDAR_NVIS_PCI|PDAR_DEV_WIDTH_8|(DEV_CS4_BASE_LO&PDAR_ADDR_MASK_LO))
	dw	(DEV_CS4_BASE_HI&PDAR_ADDR_MASK_HI)


	; DCS5 PDAR (0160.0000 - 017F.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_DCS5_LO)
	dw	(PDAR_MEM_SZ_2M|PDAR_LOC_BUS_SEL|PDAR_NVIS_PCI|PDAR_DEV_WIDTH_8|(DEV_CS5_BASE_LO&PDAR_ADDR_MASK_LO))
	dw	(DEV_CS5_BASE_HI&PDAR_ADDR_MASK_HI)


	; DCS6 PDAR (0180.0000 - 019F.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_DCS6_LO)
	dw	(PDAR_MEM_SZ_2M|PDAR_LOC_BUS_SEL|PDAR_NVIS_PCI|PDAR_DEV_WIDTH_16|(DEV_CS6_BASE_LO&PDAR_ADDR_MASK_LO))
	dw	(DEV_CS6_BASE_HI&PDAR_ADDR_MASK_HI)


	; DCS7 PDAR (01A0.0000 - 01BF.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_DCS7_LO)
	dw	(PDAR_MEM_SZ_2M|PDAR_LOC_BUS_SEL|PDAR_NVIS_PCI|PDAR_DEV_WIDTH_16|(DEV_CS7_BASE_LO&PDAR_ADDR_MASK_LO))
	dw	(DEV_CS7_BASE_HI&PDAR_ADDR_MASK_HI)


	; DCS8 PDAR (0200.0000 - 03FF.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_DCS8_LO)
	dw	(PDAR_MEM_SZ_32M|PDAR_LOC_BUS_SEL|PDAR_NVIS_PCI|PDAR_DEV_WIDTH_32|(DEV_CS8_BASE_LO&PDAR_ADDR_MASK_LO))
	dw	(DEV_CS8_BASE_HI&PDAR_ADDR_MASK_HI)


	; PCIW0 PDAR - (0400.0000 - 07FF.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_PCIW0_LO)
	dw	(PDAR_MEM_SZ_64M|PDAR_MEM_BUS_SEL|PDAR_NVIS_PCI|PDAR_DEV_WIDTH_64|(PCIW0_BASE_LO&PDAR_ADDR_MASK_LO))
	dw	(PCIW0_BASE_HI&PDAR_ADDR_MASK_HI)


	; PCIW1 PDAR - (0800.0000 - 0FFF.FFFF)
	dw	(N4_BASE_ADDR+N4_PDAR_PCIW1_LO)
	dw	(PDAR_MEM_SZ_128M|PDAR_MEM_BUS_SEL|PDAR_NVIS_PCI|PDAR_DEV_WIDTH_64|(PCIW1_BASE_LO&PDAR_ADDR_MASK_LO))
	dw	(PCIW1_BASE_HI&PDAR_ADDR_MASK_HI)


	; Interrupt Control Register - Disable All Interrupts
	dw	(N4_BASE_ADDR+N4_CICR_INTCTRL_LO)
	dw	0
	dw	0


	; Interrupt Status 1 Register
	dw	(N4_BASE_ADDR+N4_CICR_INTSTAT1_LO)
	dw	0
	dw	(ISR_ILNMI|ISR_IL5OE|ISR_IL4OE|ISR_IL3OE|ISR_IL2OE|ISR_IL1OE|ISR_IL5OE)


	; DRAM Refresh Control Register
	dw	(N4_BASE_ADDR+N4_TR_T0CTRL_LO)
	dw	$00000186
	dw	TCR_EN


	; Main Memory Control Register
	dw	(N4_BASE_ADDR+N4_MMCR_MEMCTRL_LO)
;	dw	(RAM_TYPE_16M_2BANK|MEMCTRL_CHKDIS|MEMCTRL_ENABLE|MEMCTRL_HOLDLD)
	dw	(RAM_TYPE_16M_2BANK|MEMCTRL_CHKDIS|MEMCTRL_ENABLE)
	dw	0


	; Main Memory Control Access Timing
	dw	(N4_BASE_ADDR+N4_MMCR_ACSTIME_LO)
	dw	(ACSTIME_DISMRDY|(ACSTIME_ACCT_MASK&$1F))
	dw	0


	; PCI Configuration register - Command Register
	dw	(N4_BASE_ADDR+N4_PCICSR_VID)
	dw	0
	dw	$00000006


	; PCI Configuration register - Cache Line Size Register
	dw	(N4_BASE_ADDR+N4_PCICSR_REVID)
	dw	0
	dw	$00000004


	; PCI Arbiter Control register - Fix this to use the defines !
	dw	(N4_BASE_ADDR+N4_PCI_ARB_LO)
	dw	$1100003F
	dw	$00700011


	; PCI Initiator 0 Control Registers - PCI Window 0 is for 32-bit PCI I/O
	dw	(N4_BASE_ADDR+N4_PCI_INIT0_LO)
	dw	((PCIW0_BASE_LO&PCIICR_ADDR_MASK_LO)|PCIICR_ACC32|(PCIICR_TYPE_IO<<PCIICR_TYPE_S))
	dw	(PCIW0_BASE_HI&PCIICR_ADDR_MASK_HI)


	; PCI Initiator 1 Control Registers - PCI Window 1 is for 32-bit PCI Mem
	dw	(N4_BASE_ADDR+N4_PCI_INIT1_LO)
	dw	((PCIW1_BASE_LO&PCIICR_ADDR_MASK_LO)|PCIICR_ACC32|(PCIICR_TYPE_MEM<<PCIICR_TYPE_S))
	dw	(PCIW1_BASE_HI&PCIICR_ADDR_MASK_HI)

	if	0
	; PCI Control register
	dw	(N4_BASE_ADDR+N4_PCI_CTRL_LO)
	dw	($80<<PCICR_DISCTIM_S)
	dw	0
	endif

	; Local Bus Configuration Register
	dw	(N4_BASE_ADDR+N4_LBICR_CONFIG_LO)
	dw	0
	dw	0


	; Local Bus Device Chip Select 2
	dw	(N4_BASE_ADDR+N4_LBICR_LCST2_LO)
	dw	((0<<LBCST_CON_POL_S)|(0<<LBCST_CS_POL_S)|(0<<LBCST_CONOFF_S)|(0<<LBCST_RDYSYN_S)|(0<<LBCST_RDYMODE_S)|(0<<LBCST_BUSIDLE_S)|(1<<LBCST_COFHOLD_S)|(1<<LBCST_CSOFF_S)|(2<<LBCST_SUBSCWID_S)|(2<<LBCST_CONWID_S)|(1<<LBCST_CONSET_S)|(1<<LBCST_CSON_S))
	dw	0


	; Local Bus Device Chip Select 3
	dw	(N4_BASE_ADDR+N4_LBICR_LCST3_LO)
	dw	((0<<LBCST_CON_POL_S)|(0<<LBCST_CS_POL_S)|(0<<LBCST_CONOFF_S)|(0<<LBCST_RDYSYN_S)|(0<<LBCST_RDYMODE_S)|(4<<LBCST_BUSIDLE_S)|(4<<LBCST_COFHOLD_S)|(4<<LBCST_CSOFF_S)|(19<<LBCST_SUBSCWID_S)|(19<<LBCST_CONWID_S)|(1<<LBCST_CONSET_S)|(1<<LBCST_CSON_S))
	dw	0


	; Local Bus Device Chip Select 4
	dw	(N4_BASE_ADDR+N4_LBICR_LCST4_LO)
	dw	((0<<LBCST_CON_POL_S)|(0<<LBCST_CS_POL_S)|(0<<LBCST_CONOFF_S)|(0<<LBCST_RDYSYN_S)|(0<<LBCST_RDYMODE_S)|(0<<LBCST_BUSIDLE_S)|(1<<LBCST_COFHOLD_S)|(1<<LBCST_CSOFF_S)|(4<<LBCST_SUBSCWID_S)|(4<<LBCST_CONWID_S)|(1<<LBCST_CONSET_S)|(1<<LBCST_CSON_S))
	dw	0


	; Local Bus Device Chip Select 5
	dw	(N4_BASE_ADDR+N4_LBICR_LCST5_LO)
	dw	((0<<LBCST_CON_POL_S)|(0<<LBCST_CS_POL_S)|(0<<LBCST_CONOFF_S)|(0<<LBCST_RDYSYN_S)|(0<<LBCST_RDYMODE_S)|(7<<LBCST_BUSIDLE_S)|(3<<LBCST_COFHOLD_S)|(3<<LBCST_CSOFF_S)|(7<<LBCST_SUBSCWID_S)|(7<<LBCST_CONWID_S)|(3<<LBCST_CONSET_S)|(1<<LBCST_CSON_S))
	dw	0


	; Local Bus Device Chip Select 6
	dw	(N4_BASE_ADDR+N4_LBICR_LCST6_LO)
	dw	((0<<LBCST_CON_POL_S)|(0<<LBCST_CS_POL_S)|(0<<LBCST_CONOFF_S)|(0<<LBCST_RDYSYN_S)|(0<<LBCST_RDYMODE_S)|(0<<LBCST_BUSIDLE_S)|(1<<LBCST_COFHOLD_S)|(1<<LBCST_CSOFF_S)|(3<<LBCST_SUBSCWID_S)|(3<<LBCST_CONWID_S)|(1<<LBCST_CONSET_S)|(1<<LBCST_CSON_S))
	dw	0


	; Local Bus Device Chip Select 7
	dw	(N4_BASE_ADDR+N4_LBICR_LCST7_LO)
	dw	((0<<LBCST_CON_POL_S)|(0<<LBCST_CS_POL_S)|(2<<LBCST_CONOFF_S)|(1<<LBCST_RDYSYN_S)|(1<<LBCST_RDYMODE_S)|(0<<LBCST_BUSIDLE_S)|(1<<LBCST_COFHOLD_S)|(1<<LBCST_CSOFF_S)|(4<<LBCST_SUBSCWID_S)|(4<<LBCST_CONWID_S)|(1<<LBCST_CONSET_S)|(1<<LBCST_CSON_S))
	dw	0


	; Local Bus Interface Control - Source Muxing and Output Enable
	dw	(N4_BASE_ADDR+N4_LBICR_DCSMUXOE_LO)
	dw	((OE<<OE2_S)|(MUX_IS_MEM<<MUX2_S)|(OE<<OE3_S)|(MUX_IS_MEM<<MUX3_S)|(OE<<OE4_S)|(MUX_IS_MEM<<MUX4_S)|(OE<<OE5_S)|(MUX_IS_MEM<<MUX5_S)|(OE<<OE6_S)|(MUX_IS_MEM<<MUX6_S)|(OE<<OE7_S)|(MUX_IS_MEM<<MUX7_S)|(OE<<OE8_S)|(MUX_IS_MEM<<MUX8_S))
	dw	0

	; E-O-T
	dw	0,0,0


	section	.text

	xdef	initNile4
initNile4:
	la	r4,nile4InitTable	; load init table address

iloop:
	lw	r5,0(r4)		; fetch register address
	nop
	beqz	r5,xloop		; if end-of-table, exit

	lw	r3,8(r4)		; fetch data for this register (hi 32)
	lw	r2,4(r4)		; fetch data for this register (lo 32)

	dsll32	r3,r3,0			; move to hi 32 bits
	or	r3,r2,r3		; combine with lo 32 bits
	sd	r3,0(r5)		; write data to the register

	b	iloop			; continue initialization
	addi	r4,12			; next table entry

xloop:
	jr	r31			; return
	nop

	endif
